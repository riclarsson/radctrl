Arts2 {

  AgendaSet(abs_xsec_agenda) {abs_xsec_per_speciesInit abs_xsec_per_speciesAddLines}

#   Can run with abs_xsec_per_speciesAddLines by uncommenting:
#   abs_lineshapeDefine(abs_lineshape, "Faddeeva_Algorithm_916", "no_norm", -1)
#   Will fail at first derivatives...
  
  # Constants (changes here might require changes in perturbations to match)
  isotopologue_ratiosInitFromBuiltin
  partition_functionsInitFromBuiltin
  abs_speciesSet(species=["O2-66"])
  VectorNLinSpace(f_grid, 101, 99.99e9, 100.01e9)
  VectorSet(rtp_vmr, [0.21])
  NumericSet(rtp_temperature, 250)
  NumericSet(rtp_pressure, 1e-5)
  IndexSet(stokes_dim, 1)
  
  # Comparative parameter
  ArrayOfPropagationMatrixCreate(testdata)
  
  # Absorption line (Doppler, no Zeeman, no NLTE, no mirroring, no normalization)
  ReadXML(abs_lines, "../lineshapes/testdata/lm-vp-line.xml")
  ArrayOfAbsorptionLinesCreate(aolr)
  Copy(aolr, abs_lines)
  abs_lines_per_speciesCreateFromLines
  
  # Line matching information
  ArrayOfQuantumIdentifierCreate(qi_lines)
  ReadXML(qi_lines, "../lineshapes/testdata/qi-line.xml")
  QuantumIdentifierCreate(QI)
  Extract(QI, qi_lines, 0)
  
  # NLTE matching information
  ReadXML(nlte_level_identifiers, "testdata/o2-qi.xml")
  Touch(nlte_vibrational_energies)
  rtp_nlteFromRaw(data=[0.7, 0.4])
  nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
  
  # Silly parameters that have to be set by agendas and ARTS in general but are completely useless for these calculations
  VectorSet(p_grid, [150])  # We have no grid
  VectorSet(lat_grid, [0])  # We have no grid
  VectorSet(lon_grid, [0])  # We have no grid
  IndexSet(atmosphere_dim, 1)  # We have no atmosphere
  MatrixSet(sensor_pos, [0, 0, 0])  # We have no sensor
  sensorOff  # We have no sensor
  IndexSet(propmat_clearsky_agenda_checked, 1)  # We have no propmat agenda
  
  # Set up partial derivatives
  jacobianInit
  jacobianAddTemperature(g1=p_grid, g2=[0], g3=[0])
  jacobianAddWind(g1=p_grid, g2=[0], g3=[0], dfrequency=0.1)
  jacobianAddAbsSpecies(g1=p_grid, g2=[0], g3=[0], species="O2-66", for_species_tag=0)
  jacobianAddBasicCatalogParameters(catalog_identities=qi_lines, catalog_parameters=["Line Strength", "Line Center"])
  jacobianAddShapeCatalogParameters(line_identities=qi_lines, variables=["G0", "D0", "Y", "G", "DV"], coefficients=["X0", "X1", "X2"], species=["AIR"])
  jacobianAddNLTEs(g1=p_grid, g2=[0], g3=[0], energy_level_identities=nlte_level_identifiers, dx=1e-6)
  jacobianClose
  
  # Perform calculations for analytical propagation matrix and derivatives
  abs_xsec_agenda_checkedCalc
  lbl_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  lbl_checkedCalc
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat.xml")
  #WriteXML("ascii", dpropmat_clearsky_dx, "testdata/test-nlte/dpropmat.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  ReadXML(testdata, "testdata/test-nlte/dpropmat.xml")
  CompareRelative(testdata, dpropmat_clearsky_dx, 1e-4)
  
  # Turn off the jacobian to make for faster calculations for perturbations below
  jacobianOff
  
  # Perform calculations for perturbed temperature derivative
  NumericSet(rtp_temperature, 250.0001)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  NumericSet(rtp_temperature, 250)
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dT.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat-dT.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed VMR derivative
  VectorSet(rtp_vmr, [0.2101])
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  VectorSet(rtp_vmr, [0.21])
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dvmr.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat-dvmr.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed frequency derivative
  VectorNLinSpace(f_grid, 101, 999900001e2, 1000100001e2)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  VectorNLinSpace(f_grid, 101, 99.99e9, 100.01e9)
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-df.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat-df.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed line strength derivative
  abs_linesChangeBaseParameterForMatchingLines(QI=QI, parameter_name="Line Strength", change=1e-30, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-ds0.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat-ds0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed line center derivative
  abs_linesChangeBaseParameterForMatchingLines(QI=QI, parameter_name="Line Center", change=1e1, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
  #WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-df0.xml")
  ReadXML(testdata, "testdata/test-nlte/propmat-df0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
# Perform calculations for perturbed AIR-G0-X0 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="G0", coefficient="X0", species="AIR", change=10, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-G0-X0.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-G0-X0.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-G0-X1 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="G0", coefficient="X1", species="AIR", change=1e-05, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-G0-X1.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-G0-X1.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-D0-X0 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="D0", coefficient="X0", species="AIR", change=10, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-D0-X0.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-D0-X0.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-D0-X1 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="D0", coefficient="X1", species="AIR", change=1e-05, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-D0-X1.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-D0-X1.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-Y-X0 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="Y", coefficient="X0", species="AIR", change=1e-10, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-Y-X0.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-Y-X0.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-Y-X1 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="Y", coefficient="X1", species="AIR", change=1e-12, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-Y-X1.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-Y-X1.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-Y-X2 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="Y", coefficient="X2", species="AIR", change=1e-05, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-Y-X2.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-Y-X2.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-G-X0 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="G", coefficient="X0", species="AIR", change=1e-14, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-G-X0.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-G-X0.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-G-X1 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="G", coefficient="X1", species="AIR", change=1e-16, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-G-X1.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-G-X1.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-G-X2 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="G", coefficient="X2", species="AIR", change=1e-05, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-G-X2.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-G-X2.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-DV-X0 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="DV", coefficient="X0", species="AIR", change=0.1, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-DV-X0.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-DV-X0.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-DV-X1 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="DV", coefficient="X1", species="AIR", change=0.01, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-DV-X1.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-DV-X1.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed AIR-DV-X2 derivative
abs_linesChangeLineShapeModelParameterForMatchingLines(QI=QI, parameter="DV", coefficient="X2", species="AIR", change=1e-05, relative=0)
abs_lines_per_speciesCreateFromLines
nlteSetByQuantumIdentifiers(nlte_field=rtp_nlte)
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlf-AIR-DV-X2.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlf-AIR-DV-X2.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed lower levels derivative
rtp_nlteFromRaw(data=[0.7, 0.40001])
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
rtp_nlteFromRaw(data=[0.7, 0.4])
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dlow.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dlow.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)

# Perform calculations for perturbed lower levels derivative
rtp_nlteFromRaw(data=[0.70001, 0.4])
abs_xsec_agenda_checkedCalc
propmat_clearskyInit
propmat_clearskyAddOnTheFly
rtp_nlteFromRaw(data=[0.7, 0.4])
Copy(abs_lines, aolr)
#WriteXML("ascii", propmat_clearsky, "testdata/test-nlte/propmat-dupp.xml")
ReadXML(testdata, "testdata/test-nlte/propmat-dupp.xml")
CompareRelative(testdata, propmat_clearsky, 1e-6)
}
