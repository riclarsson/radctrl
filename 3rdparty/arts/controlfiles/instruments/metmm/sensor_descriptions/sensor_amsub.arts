#DEFINITIONS:  -*-sh-*-

# ARTS sensor description for AMSU-B simulations
#
# This requires to run prepare_metmm.arts beforehand.
#
# This expects the following workspace variables to exist and to be set:
#    met_mm_accuracy (Index)    Selection of accuracy level.
#
# The following variables are set:
#    antenna_dlos
#    met_mm_backend
#    met_mm_polarisation
#    met_mm_freq_number
#    met_mm_freq_spacing
#    met_mm_antenna

# Sensor characteristics based on KLM User's Guide at
# http://www.ncdc.noaa.gov/oa/pod-guide/ncdc/docs/klm/html/c3/sec3-4.htm

# Viewing angles
# There are 45 different angles, corresponding to one side of the AMSU-B Scan.
Arts2{    
    MatrixSet(
    antenna_dlos,
    [
    -48.95; #0 (off-nadir)
    -47.85; #1
    -46.75; #2
    -45.65; #3
    -44.55; #4
    -43.45; #5
    -42.35; #6
    -41.25; #7
    -40.15; #8
    -39.05; #9
    -37.95; #10
    -36.85; #11
    -35.75; #12
    -34.65; #13
    -33.55; #14
    -32.45; #15
    -31.35; #16
    -30.25; #17
    -29.15; #18
    -28.05; #19
    -26.95; #20
    -25.85; #21
    -24.75; #22
    -23.65; #23
    -22.55; #24
    -21.45; #25
    -20.35; #26
    -19.25; #27
    -18.15; #28
    -17.05; #29
    -15.95; #30
    -14.85; #31
    -13.75; #32
    -12.65; #33
    -11.55; #34
    -10.45; #35
    -9.35; #36
    -8.25; #37
    -7.15; #38
    -6.05; #39
    -4.95; #40
    -3.85; #41
    -2.75; #42
    -1.65; #43
    -0.55  #44 (nadir)
    ] )
    
    # Sensor response setup
    # ---
    
    MatrixSet(
    met_mm_backend,
    # all frequencies are in Hz 
    # CenterFreq, Offset1, Offset2, Bandwidth; #ARTS channel index
    #                                             (Instrument channel)
    [
    89.00e9,      0.90e9,  0.,      1000e6 ;   #0 (16)
    150.00e9,     0.90e9,  0.,      1000e6 ;   #1 (17)
    183.31e9,     1.00e9,  0.,       500e6 ;   #2 (18)
    183.31e9,     3.00e9,  0.,      1000e6 ;   #3 (19)
    183.31e9,     7.00e9,  0.,      2000e6     #4 (20)
    ] )
    
    ArrayOfStringSet(
    met_mm_polarisation,
    [
    "AMSU-V", #0 (16)
    "AMSU-V", #1 (17)
    "AMSU-V", #2 (18)
    "AMSU-V", #3 (19)
    "AMSU-V"  #4 (20)
    ] )
    
    # Antenna is not supported for now
    VectorSet( met_mm_antenna, [] )
    
# How many monochromatic frequencies to simulate the channel
Touch( met_mm_available_accuracies )
Delete( met_mm_available_accuracies )

# Number of frequencies for first accuracy (fast)
ArrayOfIndexSet(freq_number_tmp,
    [1, #0 (16)
    1,  #1 (17)
    1,  #2 (18)
    1,  #3 (19)
    1   #4 (20)
    ] )

Append(met_mm_available_accuracies, freq_number_tmp)

# Number of frequencies for second accuracy (normal)
ArrayOfIndexSet(freq_number_tmp,
   [1, #0 (16)
    2, #1 (17)
    2, #2 (18)
    2, #3 (19)
    3  #4 (20)
   ] )
Append(met_mm_available_accuracies, freq_number_tmp)

# Number of frequencies for third accuracy (high)
ArrayOfIndexSet(freq_number_tmp,
   [1,  #0 (16)
    18, #1 (17)
    20, #2 (18)
    7,  #3 (19)
    10  #4 (20)
   ] )
Append(met_mm_available_accuracies, freq_number_tmp)

# Number of frequencies for fourth accuracy (reference)
ArrayOfIndexSet(freq_number_tmp,
   [2,  #0 (16)
    23, #1 (17)
    67, #2 (18)
    19, #3 (19)
    25  #4 (20)
   ] )

Append(met_mm_available_accuracies, freq_number_tmp)

VectorSet( freq_spacing_tmp, [10e9, 1e9, 1e9, 1e9] )

Delete( freq_number_tmp )

Extract( met_mm_freq_number, met_mm_available_accuracies, met_mm_accuracy )
Extract( current_spacing,    freq_spacing_tmp,            met_mm_accuracy )

nrowsGet( met_mm_nchannels, met_mm_backend )
VectorSetConstant( met_mm_freq_spacing, met_mm_nchannels, current_spacing )
Delete( current_spacing )

}
